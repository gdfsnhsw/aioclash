log:
  level: info   
  file: /tmp/mosdns.log
 
plugin:
  ################# 服务器插件 ################

  # 启动服务器的插件
  - tag: main_server
    type: server
    args:
      entry:  # 这个服务器插件收到请求后会
        - _single_flight  #去除重复请求
        - _no_ecs # 删除请求和应答中的 ECS
        - main_sequence   # 运行主执行序列

      server:   # 监听以下协议和端口                       
        - protocol: udp             
          addr: 0.0.0.0:53          
        - protocol: tcp
          addr: 0.0.0.0:53

  ################# 可执行插件 ################

  # 包含分流的逻辑的插件
  - tag: main_sequence
    type: sequence
    args:
      exec:
        - if:
            - query_is_ad_domain    # 已知的广告域名
          exec:
            - _block_with_nxdomain  # 生成 NXDOMAIN 应答
            - _return               # 返回。不再执行后续插件
        
        - mem_cache      # 运行缓存插件。放在这里就可以避免缓存到无用的广告域名。

        - if:
            - query_is_local_domain   # 已知的本地域名
            - '!_query_is_common'     # 和不常见的请求类型
          exec:
            - forward_local           # 用本地服务器
            - _return
        
        - if:
            - query_is_non_local_domain  # 已知的非本地域名
          exec:
            - if:
                - _qtype_AAAA # QTYPE 是 AAAA
              exec:
                - _block_with_empty_response   # 生成 Rcode 为 0 的空应答。(模拟域名存在但没有所请求类型的记录)
                - _return
            - forward_remote             # 用远程服务器
            - _return

        # 剩下的未知域名用 IP 分流。原理类似 ChinaDNS，但更稳定。
        # 详细分流原理请参考 `fallback` 的工作流程。        
        - primary:
            - forward_local     # 本地服务器为主
            - if:
                - '!response_has_local_ip'  # 过滤掉非本地的 IP
              exec:
                - _drop_response  # 将应答设为空值(丢弃已存在的应答)
          secondary:
            - if:
                - _qtype_AAAA # QTYPE 是 AAAA
              exec:
                - _block_with_empty_response  # 生成 Rcode 为 0 的空应答。(模拟域名存在但没有所请求类型的记录)
                - _return
            - forward_remote
          fast_fallback: 150  # 这里建议设置成 local 服务器正常延时的 2~5 倍。
                              # 这个延时保证了 local 延时偶尔变高时，其结果不会被 remote 抢答。
                              # 如果 local 超过这个延时还没响应，可以假设 local 出现了问题。
                              # 这时用就采用 remote 的应答。单位: 毫秒。
          always_standby: true

        - modify_ttl      # 最后修改应答的 ttl

  # 缓存
  - tag: 'mem_cache'
    type: 'cache'
    args:
      size: 4096
      lazy_cache_ttl: 259200

  # 修改应答 ttl
  - tag: 'modify_ttl'
    type: 'ttl'
    args:
      minimal_ttl: 300
      maximum_ttl: 3600

 # 转发请求至本地服务器的插件
  - tag: forward_local
    type: fast_forward
    args:
      upstream:     
        - addr: 119.29.29.29
          trusted: true
          idle_timeout: 30
        - addr: 223.6.6.6
          trusted: true
          idle_timeout: 30
        - addr: 114.114.114.114
          trusted: true
          idle_timeout: 30
        - addr: 202.96.128.166 # 广东电信
          trusted: true
          idle_timeout: 30

  # 转发请求至远程服务器的插件
  - tag: forward_remote
    type: fast_forward
    args:
      upstream:
          addr: 127.0.0.1:5352  # clash
          trusted: true

  ################ 匹配器插件 #################

  # 匹配本地域名的插件
  - tag: query_is_local_domain
    type: query_matcher
    args:
      domain:
        - 'ext:./geosite.dat:cn'

  # 匹配非本地域名的插件
  - tag: query_is_non_local_domain
    type: query_matcher
    args:
      domain:
        - 'ext:./geosite.dat:geolocation-!cn'

  # 匹配广告域名的插件
  - tag: query_is_ad_domain
    type: query_matcher
    args:
      domain:
        - 'ext:./geosite.dat:category-ads-all'

  # 匹配本地 IP 的插件
  - tag: response_has_local_ip
    type: response_matcher
    args:
      ip:
        - 'ext:./geoip.dat:cn'
